[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Implementación de los Autómatas Celulares de Wolfram en R\n\n\n\nR\n\n\nTutorial\n\n\nVisualización\n\n\nAutómatas Celulares\n\n\n\nEn este artículo, presento una exploración práctica de los ACW, utilizando R y {ggplot2} para la visualización. Esta implementación busca ilustrar cómo reglas sencillas pueden dar lugar a…\n\n\n\n\n\n\n23 ene 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnálisis de encuestas ENIF y ENAFIN\n\n\n\nR\n\n\nTutorial\n\n\nAnálisis de Datos\n\n\nEncuestas\n\n\n\nEste tutorial detalla cómo descargar, procesar y visualizar datos de las Encuestas Nacionales de Inclusión Financiera (ENIF) y de Financiamiento de las Empresas (ENAFIN) utilizando R.\n\n\n\n\n\n\n5 ene 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPresentaciones desde RStudio con {xaringan}\n\n\n\nR\n\n\nTutorial\n\n\n\nEn este tutorial muestro cómo crear presentaciones dinámicas desde RStudio mediante el uso del paquete {xaringan}.\n\n\n\n\n\n\n14 nov 2023\n\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sobre mí",
    "section": "",
    "text": "Bienvenido a mi espacio personal, un rincón digital donde convergen mi vida profesional y mis aspiraciones. Soy Alejandro Romero González, un economista de sólida formación académica proveniente del Centro de Investigación y Docencia Económicas y un técnico en programación por el Instituto Politécnico Nacional. Mi trayectoria está marcada por una constante búsqueda de conocimiento y una innata habilidad para el análisis y la solución de problemas complejos.\nLa programación no es solo una pieza de mi herramental técnico, es una extensión de mi pensamiento crítico. Con un dominio avanzado de R y Python y una comprensión básica de Stata, mi enfoque es siempre multifacético. Herramientas como MySQL, Git, Quarto y QGIS se han convertido en mis compañeros ocasionales en la exploración y manipulación de datos.\nMi pasión por compartir conocimientos me ha llevado a roles de mentoría y docencia, donde la difusión de la educación de calidad es mi bandera. Como Profesor y Coordinador General en IncluCIDE, he liderado esfuerzos para disminuir la disparidad educativa, proveyendo clases gratuitas de Matemáticas para el empoderamiento y el éxito de jóvenes estudiantes de escuelas primarias y secundarias públicas de 16 estados de la república. Como Profesor Asistente en el CIDE, impartí el curso de Microeconomía II a 16 estudiantes de segundo año de la Licenciatura en Economía, bajo la supervisión de la Dra. Sonia Di Giannatale. Mediante clases de 120 minutos, tareas y asignaciones propuestas por la profesora, fomenté un ambiente de aprendizaje colaborativo y enriquecedor para todos los estudiantes, logrando así una comprensión sólida de los conceptos revisados.\nEn cada conjunto de datos veo una historia esperando ser contada, y en cada desafío, una oportunidad para crecer. Esta perspectiva, alimentada por mi experiencia en docencia y programación, es la chispa detrás de mi reciente blog. Ahí, fusiono mis habilidades analíticas y de enseñanza para ofrecer un viaje único a través del mundo de la economía y la ciencia de datos. Te invito a adentrarte en este viaje conmigo, donde exploraremos juntos distintas herramientas, compartiremos ideas innovadoras y descubriremos dichas historias ocultas."
  },
  {
    "objectID": "blog/ACW/index.html",
    "href": "blog/ACW/index.html",
    "title": "Implementación de los Autómatas Celulares de Wolfram en R",
    "section": "",
    "text": "Los Autómatas Celulares (AC) son sistemas dinámicos discretos y abstractos con aplicaciones en numerosos campos científicos. Se componen de una red de células que cambian de estado según reglas determinadas, a menudo con base en el estado de las células vecinas. Esta sencilla premisa puede generar una sorprendente variedad de comportamientos: desde patrones estáticos, hasta dinámicas complejas y caóticas.\nLos AC fueron introducidos por primera vez por el matemático John von Neumann y el físico Stanislaw Ulam en la década de 1960, pero fue el físico Stephen Wolfram quien popularizó su estudio en la década de 1980. Wolfram propuso una estructura unidimensional y un conjunto de reglas binarias simples para los AC, que se terminaron conociendo como los Autómatas Celulares de Wolfram (ACW). Este tipo de autómatas se han convertido en un modelo de referencia para el estudio de la complejidad y la emergencia de patrones en sistemas dinámicos.\n\n\nEn general, los AC basan su comportamiento en tres componentes principales:\n\nEspacio de Células: Una matriz (en nuestro caso, un vector) donde cada elemento representa una célula.\nEstados: Cada célula puede adoptar un estado de un conjunto finito de estados posibles. En este ejemplo, las células pueden estar activas (“\\(1\\)”) o inactivas (“\\(0\\)”).\nReglas de Evolución: Las células cambian de estado según reglas determinadas, habitualmente con base en el estado de las células vecinas. Para los ACW, las células cambian de estado basandose en su propio estado y el de las células que están a la izquierda y derecha de cada una de ellas mediante una regla binaria de 8 bits. Esta última se representa como un número entero entre 0 y 255."
  },
  {
    "objectID": "blog/ACW/index.html#introducción-a-los-autómatas-celulares-de-wolfram",
    "href": "blog/ACW/index.html#introducción-a-los-autómatas-celulares-de-wolfram",
    "title": "Implementación de los Autómatas Celulares de Wolfram en R",
    "section": "",
    "text": "Los Autómatas Celulares (AC) son sistemas dinámicos discretos y abstractos con aplicaciones en numerosos campos científicos. Se componen de una red de células que cambian de estado según reglas determinadas, a menudo con base en el estado de las células vecinas. Esta sencilla premisa puede generar una sorprendente variedad de comportamientos: desde patrones estáticos, hasta dinámicas complejas y caóticas.\nLos AC fueron introducidos por primera vez por el matemático John von Neumann y el físico Stanislaw Ulam en la década de 1960, pero fue el físico Stephen Wolfram quien popularizó su estudio en la década de 1980. Wolfram propuso una estructura unidimensional y un conjunto de reglas binarias simples para los AC, que se terminaron conociendo como los Autómatas Celulares de Wolfram (ACW). Este tipo de autómatas se han convertido en un modelo de referencia para el estudio de la complejidad y la emergencia de patrones en sistemas dinámicos.\n\n\nEn general, los AC basan su comportamiento en tres componentes principales:\n\nEspacio de Células: Una matriz (en nuestro caso, un vector) donde cada elemento representa una célula.\nEstados: Cada célula puede adoptar un estado de un conjunto finito de estados posibles. En este ejemplo, las células pueden estar activas (“\\(1\\)”) o inactivas (“\\(0\\)”).\nReglas de Evolución: Las células cambian de estado según reglas determinadas, habitualmente con base en el estado de las células vecinas. Para los ACW, las células cambian de estado basandose en su propio estado y el de las células que están a la izquierda y derecha de cada una de ellas mediante una regla binaria de 8 bits. Esta última se representa como un número entero entre 0 y 255."
  },
  {
    "objectID": "blog/ACW/index.html#preparación-del-entorno-en-r",
    "href": "blog/ACW/index.html#preparación-del-entorno-en-r",
    "title": "Implementación de los Autómatas Celulares de Wolfram en R",
    "section": "Preparación del Entorno en R",
    "text": "Preparación del Entorno en R\nPara comenzar nuestra exploración de los Autómatas Celulares de Wolfram en R, primero necesitamos configurar nuestro entorno de trabajo cargando algunas bibliotecas esenciales. Estas bibliotecas nos ayudarán en la manipulación de datos y en la visualización gráfica de los resultados.\n\n# Instalalas si aún no las tienes utilizando:\n# install.packages(c(\"dplyr\", \"ggplot2\", \"ggview\"))\n\nlibrary(dplyr) # para la manipulación de datos\nlibrary(ggplot2) # para la creación de gráficos\nlibrary(ggview) # para visualizar los gráficos en el Viewer sin guardarlos"
  },
  {
    "objectID": "blog/ACW/index.html#definición-de-la-función-para-reglas-binarias",
    "href": "blog/ACW/index.html#definición-de-la-función-para-reglas-binarias",
    "title": "Implementación de los Autómatas Celulares de Wolfram en R",
    "section": "Definición de la Función para Reglas Binarias",
    "text": "Definición de la Función para Reglas Binarias\nDespués de haber preparado nuestro entorno en R, el siguiente paso es definir cómo nuestro ACW interpretará las reglas que dictarán la evolución de sus células. Recordemos que en los ACW, estas reglas se aplican basándose en el estado actual de una célula y sus vecinos inmediatos a la izquierda y a la derecha.\nCada combinación de estos tres estados (el propio y los de sus dos vecinos) puede ser representada como un número binario de 3 dígitos, y para cada combinación posible, la regla del autómata define si la célula estará activa o inactiva en la siguiente generación. Dado que hay \\(2^{3} = 8\\) combinaciones posibles, una regla de autómata celular se puede representar como una secuencia de 8 bits, donde cada bit indica el estado resultante para una combinación específica de vecinos. Por lo tanto, hay un total de \\(2^{8} = 256\\) reglas posibles, numeradas del 0 al 255.\nLa función getBinaryRule que definiremos a continuación, toma un número entre 0 y 255 y lo convierte en su versión binaria de 8 bits. Aquí nos estamos aprovechando de que los números del 0 al 255 se representan en binario con 8 dígitos y a partir del 256 con 9 o más. Esto nos permitirá aplicar fácilmente la regla elegida a nuestro autómata:\n\ngetBinaryRule &lt;- function(ruleNumber) {\n  # Convierte el número en una secuencia de bits:\n  ruleBinary &lt;- intToBits(ruleNumber)[1:8]\n  # Convierte la secuencia de bits en un vector de enteros:\n  ruleBinary &lt;- as.integer(rev(ruleBinary))\n  return(ruleBinary)\n}\n\nTras definir la función getBinaryRule, nuestro siguiente paso es establecer el escenario para la simulación de nuestro ACW. Esto implica inicializar las reglas que determinarán el comportamiento de las células y preparar la población inicial en nuestro modelo."
  },
  {
    "objectID": "blog/ACW/index.html#inicialización-de-las-reglas-y-las-células",
    "href": "blog/ACW/index.html#inicialización-de-las-reglas-y-las-células",
    "title": "Implementación de los Autómatas Celulares de Wolfram en R",
    "section": "Inicialización de las Reglas y las Células",
    "text": "Inicialización de las Reglas y las Células\nComenzaremos eligiendo una regla específica para nuestro autómata. Recordemos que las reglas varían de 0 a 255, cada una produciendo patrones interesantes. Para este ejemplo, utilizaremos la regla 135:\n\n# Selecciona la regla número 135:\nruleNumber &lt;- 135\n# Convierte la regla a su representación binaria:\nruleSet &lt;- getBinaryRule(ruleNumber)\n# Establece el número de células y generaciones para la simulación:\nnumCells &lt;- 101\ngenerations &lt;- 101\n# Crea una matriz para representar cada generación de células:\ngrid &lt;- matrix(nrow = generations, ncol = numCells)"
  },
  {
    "objectID": "blog/ACW/index.html#configuración-de-la-población-inicial",
    "href": "blog/ACW/index.html#configuración-de-la-población-inicial",
    "title": "Implementación de los Autómatas Celulares de Wolfram en R",
    "section": "Configuración de la Población Inicial",
    "text": "Configuración de la Población Inicial\nAhora, definiremos la población inicial de células. Para simplificar y visualizar claramente el efecto de la regla seleccionada, iniciaremos con una única célula activa en el centro de nuestra cuadrícula:\n\n# Inicializa todas las células en estado inactivo (0):\ncells &lt;- rep(0, numCells)\n# Activa la célula central:\ncells[ceiling(numCells / 2)] &lt;- 1\n# Establece la configuración previa como la primera generación en nuestra matriz:\ngrid[1, ] &lt;- cells\n\nAsí, estamos en posición de simular cómo estas células evolucionarán a lo largo de las generaciones bajo la regla seleccionada. Este es el núcleo de los ACW, donde las simples reglas locales conducen a patrones complejos y a menudo sorprendentes a lo largo del tiempo."
  },
  {
    "objectID": "blog/ACW/index.html#aplicación-de-las-reglas-para-dar-paso-a-nuevas-generaciones",
    "href": "blog/ACW/index.html#aplicación-de-las-reglas-para-dar-paso-a-nuevas-generaciones",
    "title": "Implementación de los Autómatas Celulares de Wolfram en R",
    "section": "Aplicación de las Reglas para Dar Paso a Nuevas Generaciones",
    "text": "Aplicación de las Reglas para Dar Paso a Nuevas Generaciones\nPara observar la evolución de nuestro autómata celular, aplicaremos las reglas definidas en cada célula y en cada generación. Recordemos que las reglas consideran el estado de una célula y sus vecinas inmediatas (izquierda y derecha) para determinar su nuevo estado. Este proceso se repite para cada célula en cada nueva generación:\n\n# Bucle a través de cada generación, empezando por la segunda:\nfor (gen in 2:generations) {\n  # Bucle a través de cada célula en la generación:\n  for (i in 1:numCells) {\n    # Calcula los índices de las vecinas izquierda y derecha, \n    # considerando condiciones de frontera periódicas\n    # (si la célula está en el borde, la vecina es la primera o la última):\n    left_index &lt;- ifelse(i == 1, numCells, i - 1)\n    right_index &lt;- ifelse(i == numCells, 1, i + 1)\n\n    # Obtiene los estados de las vecinas y de la célula central:\n    left &lt;- grid[gen - 1, left_index]\n    center &lt;- grid[gen - 1, i]\n    right &lt;- grid[gen - 1, right_index]\n\n    # Calcula el patrón de vecindario en versión entera (nota más adelante):\n    neighborhood &lt;- left * 4 + center * 2 + right\n    # Determina el nuevo estado basado en la respectiva regla:\n    grid[gen, i] &lt;- ruleSet[8 - neighborhood]\n  }\n}\n\n\n\n\n\n\n\nNota\n\n\n\nEl vecindario de una célula es una combinación de sus estados y los de sus dos vecinas. En los ACW, este vecindario se representa como un número binario de 3 dígitos. Por ejemplo, si la célula izquierda, la célula central y la célula derecha están en los estados 1 (activo), 0 (inactivo), y 1 (activo), respectivamente, el vecindario se representa como \\(101\\) en binario.\nPara convertir esta representación binaria del vecindario en algo que podamos usar para acceder a nuestra regla en versión binaria, necesitamos convertirla a un número entero que vaya del 0 al 7. Aquí es donde entran en juego las multiplicaciones por 4 y por 2:\n\nEl bit más a la izquierda (la vecina izquierda) se multiplica por 4 porque, en la representación binaria, este bit es equivalente a \\(2^{2} = 4\\). Si este bit es 1, su contribución al número decimal total es 4.\nEl bit del medio (la célula misma) se multiplica por 2 porque corresponde a \\(2^{1} = 2\\) en binario. Si esta célula está activa, añade 2 al número decimal.\nEl bit más a la derecha (la vecina derecha) no se multiplica porque representa \\(2^{0} = 1\\). Así, su estado (activo o inactivo) se añade tal cual al número decimal.\n\n\n\nEste doble bucle, primero a través de las generaciones y luego a través de cada célula, es el corazón de nuestra simulación. En cada paso, estamos aplicando cada regla binaria para determinar el estado futuro de cada célula, basándonos en su estado actual y el de sus vecinas. Al final de este proceso, tendremos una representación completa de cómo las células evolucionan a lo largo del tiempo bajo la influencia de nuestra regla seleccionada."
  },
  {
    "objectID": "blog/ACW/index.html#visualización-de-la-evolución-de-las-células",
    "href": "blog/ACW/index.html#visualización-de-la-evolución-de-las-células",
    "title": "Implementación de los Autómatas Celulares de Wolfram en R",
    "section": "Visualización de la Evolución de las Células",
    "text": "Visualización de la Evolución de las Células\nPara visualizar la evolución de nuestro ACW, primero necesitamos transformar nuestros datos de la matriz grid en un formato adecuado para {ggplot2}. Lo hacemos creando un data frame que represente cada célula y su estado en cada generación:\n\n# Crea un data frame con todas las combinaciones de células y generaciones:\ndf &lt;- expand.grid(x = 1:numCells, y = 1:generations)\n# Asigna los valores de la cuadrícula al data frame, ajustando la estructura.\n# La transposición cambia las filas por columnas y viceversa para que cada\n# columna represente una generación y cada fila una célula.\n# La función as.vector() convierte la matriz en un vector para que podamos ir\n# asignando valores de generación en generación, como esta creado el data frame:\ndf$value &lt;- as.vector(t(grid))\n# Ajusta el eje y para que las generaciones se muestren en el orden correcto\n# (de arriba a abajo):\ndf$y &lt;- generations - df$y + 1\n\nAhora que tenemos nuestros datos en el formato correcto, podemos proceder a visualizarlos utilizando {ggplot2}. Esta herramienta nos permite crear una representación gráfica clara y atractiva de cómo cambian las células a lo largo del tiempo:\n\n# Crea un gráfico con ggplot2:\nplot_acw &lt;- ggplot(df, aes(x = x, y = y, fill = factor(value))) +\n  geom_tile() + # Crea un gráfico de mosaico\n  scale_fill_manual(values = c(\"white\", \"black\")) + # Define los colores\n  theme(legend.position = \"none\", # Elimina la leyenda\n        panel.grid = element_blank(), # Elimina las líneas de la cuadrícula\n        axis.title = element_blank(), # Elimina los títulos de los ejes\n        axis.text = element_blank(), # Elimina las etiquetas de los ejes\n        axis.ticks = element_blank(), # Elimina las marcas de los ejes\n        panel.background = element_blank(), # Elimina el fondo del panel\n        panel.border = element_blank()) # Elimina el borde del panel\n\n# Visualiza el gráfico en el Viewer de RStudio:\n#ggview(plot_acw, width=10, height = 10, dpi = 500, units = \"in\")\n\n# Guarda el gráfico como un archivo PNG:\n#ggsave(\"acw_135.png\", width=10, height = 10, dpi = 1000, units = \"in\")\n\nEl resultado de todo lo anterior es una visualización de la evolución de nuestro ACW bajo la regla 135:"
  },
  {
    "objectID": "blog/ACW/index.html#explorando-el-espacio-de-reglas",
    "href": "blog/ACW/index.html#explorando-el-espacio-de-reglas",
    "title": "Implementación de los Autómatas Celulares de Wolfram en R",
    "section": "Explorando el Espacio de Reglas",
    "text": "Explorando el Espacio de Reglas\nYa que hemos visto cómo funciona un ACW bajo una regla específica, podemos explorar cómo cambia el comportamiento de nuestro sistema cuando cambiamos la regla. Para ello, a continuación y gracias a quarto-webr, podemos modificar y correr el siguiente chunk de código para explorar el espacio de reglas (0 a 255): solamente debemos cambiar el número de la regla dentro de la función ACW y darle clic a Run Code:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "blog/ACW/index.html#conclusión-y-reflexiones",
    "href": "blog/ACW/index.html#conclusión-y-reflexiones",
    "title": "Implementación de los Autómatas Celulares de Wolfram en R",
    "section": "Conclusión y Reflexiones",
    "text": "Conclusión y Reflexiones\nAl concluir este viaje a través de los ACW en R, hemos explorado no solo un fascinante modelo matemático, sino también la profunda complejidad que puede surgir de reglas aparentemente simples. Los ACW nos ofrecen una ventana única hacia la naturaleza emergente de los sistemas complejos, un concepto que encuentra resonancia en campos tan variados como la biología, la informática, la física e incluso la economía, la sociología y demás ciencias sociales.\n\nLecciones Aprendidas\n\nSimplicidad y Complejidad: Hemos visto cómo estructuras simples pueden dar lugar a patrones increíblemente complejos y variados. Esta es una poderosa metáfora de cómo sistemas simples pueden generar fenómenos emergentes en el mundo real. Por ejemplo, la complejidad de un individuo surge de la interacción y coevolución con otros individuos, su entorno socioeconómico-cultural y factores psicológicos y biológicos.\nExploración y Experimentación: La capacidad de experimentar con diferentes reglas y configuraciones nos recuerda la importancia de la exploración en la ciencia y la tecnología. Cada cambio en la regla puede revelar nuevos patrones y comportamientos, alentando una mentalidad de descubrimiento continuo. Además, logramos aprender cómo graficar celdas producto de una simulación, lo cual es una habilidad útil para trabajar con datos en general.\n\n\n\nReferencias e Inspiración\nEste artículo se basa en el trabajo de tres personas. Primero, el físico Stephen Wolfram, quien en 2002 publicó un libro titulado A New Kind of Science (Un Nuevo Tipo de Ciencia), en el cual introduce y explora los ACW y sus implicaciones en la ciencia y la tecnología. En segundo lugar, el economista y científico de la complejidad Gonzalo Castañeda, quien en 2021 publicó The Paradigm of Social Complexity (El Paradigma de la Complejidad Social): un libro que, en dos volúmenes, construye un marco teórico y práctico para el estudio de fenómenos socioeconómicos a través de conceptos como los Sistemas Adaptables Complejos, Autómatas Celulares y Modelos Basados en Agentes. Finalmente, al maestro Daniel Shiffman, quien con su canal de Youtube The Coding Train y su libro The Nature of Code (La Naturaleza del Código) me inspiró y ayudó a implementar este proyecto en R.\nEspero sinceramente que hayas encontrado tanto valor como inspiración en el fascinante mundo de los Autómatas Celulares de Wolfram. Mi objetivo al compartir esta exploración en R no es solo presentar un tema interesante y complejo de manera accesible, sino también encender tu curiosidad y el deseo de experimentar más allá de lo que hemos explorado aquí. Animo a cada uno de ustedes a tomar lo que hemos aprendido y expandirlo, ya sea creando nuevas versiones, aplicando estos conceptos en diferentes contextos o explorando nuevas áreas que aún estén por descubrir. La belleza de la programación y la ciencia de datos radica en su naturaleza exploratoria, en cómo nos permite dar forma a nuestras ideas y teorías."
  },
  {
    "objectID": "blog/xaringan/index.html",
    "href": "blog/xaringan/index.html",
    "title": "Presentaciones desde RStudio con {xaringan}",
    "section": "",
    "text": "Primero, necesitamos instalar y cargar los paquetes necesarios:\ninstall.packages(c(\"pagedown\", \"xaringan\"), dependencies = TRUE)\nlibrary(pagedown)\nlibrary(xaringan)\nAhora, para generar nuestra primer presentación, pondremos la siguiente estructura en un archivo .Rmd vacío:\n---\ntitle: \"Práctica 1\"\nsubtitle: \"Presentación hecha con {xaringan}\"\nauthor: \"Alejandro Romero González\"\ndate: \"10/25/2021\"\noutput:\n    xaringan::moon_reader:\n      css: [\"default\"]\n      nature:\n        highlightStyle: github\n        highlighLine: true\n        countIncrementalSlides: true\n---\nAl guardar dicho archivo y después darle clic a Knit, RStudio compilará un html con el siguiente contenido:\n\nPodrás ver que la presentación está un poco fea. Para darle un mejor estilo podemos crear nuestro propio tema o utilizar los temas precargados. Estos últimos podemos visualizarlos escribiendo lo siguiente en la consola:\nnames(xaringan:::list_css())\nYo escogeré la fuente “tamu-fonts” y el tema “shinobi”. Se aplican en el .Rmd de la siguiente manera:\n---\ntitle: \"Práctica 1\"\nsubtitle: \"Presentación hecha con {xaringan}\"\nauthor: \"Alejandro Romero González\"\ndate: \"10/25/2021\"\noutput:\n    xaringan::moon_reader:\n      css: [\"default\", \"tamu-fonts\", \"shinobi\"]\n      nature:\n        highlightStyle: github\n        highlighLine: true\n        countIncrementalSlides: true\n---\nGuardamos y compilamos de nuevo. El output ahora es este:\n\nYa se ve mejor. Sin embargo, está algo tedioso que una ventana adicional aparezca para poder visualizar la presentación. Es por ello que existe Infinite Moon Reader: éste addin nos permitirá visualizar la presentación en el viewer que está integrado a RStudio (como cuando visualizamos gráficas de {ggplot2}). Para activarlo solo es necesario darle clic al botón Addins que se encuentra en la parte superior de RStudio, buscar Infinite Moon Reader y oprimir clic de nuevo (si saltan avisos de que necesitamos instalar o actualizar algunos paquetes, les damos aceptar). Con esto, ya podremos visualizar la presentación desde Rstudio actualizándose en tiempo real (la mayor parte de las veces).\n\n\n\n\n\n\nNota\n\n\n\nSi Infinite Moon Reader no aparece en Addins, reinstalen el paquete {xaringan}, pero ahora desde la repo oficial en Github:\nremotes::install_github(\"yihui/xaringan\")\n\n\nPara crear nuevas diapositivas simplemente tenemos que escribir debajo del área donde definimos el título, subtítulo, etc., e ir separando diapositiva por diapositiva con tres guiones. Ejemplo:\n---\ntitle: \"Práctica 1\"\nsubtitle: \"Presentación hecha con {xaringan}\"\nauthor: \"Alejandro Romero González\"\ndate: \"10/25/2021\"\noutput:\n    xaringan::moon_reader:\n      css: [\"default\", \"tamu-fonts\", \"shinobi\"]\n      nature:\n        highlightStyle: github\n        highlighLine: true\n        countIncrementalSlides: true\n---\n\nclass: inverse\n\n# Mi primera diapositiva\n\nEsto es un texto\n  - Elemento 1\n  - Elemento 2\n  \n  1. Uno\n  2. Dos\n  3. Tres\n  \n---\n\n# Mi segunda diapositiva\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nOutput:\n\n    \n    \n\n\n\n\n\n\n\nNota\n\n\n\nEl color de fondo predeterminado del tema que escogí es el blanco, sin embargo lo cambié al color inverso con “class: inverse”, como se puede ver en el código de arriba.\n\n\nPara poner links a una página web dentro de una diapositiva podemos hacerlo de tres maneras:\n---\n\n# Diapositiva con links\n\n- Simplemente poner el link: https://cran.r-project.org/\n\n- Usar sintaxis de Rmarkdown: [link a CRAN](https://cran.r-project.org/)\n\n&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;\n\n- Usar sintaxis de HTML\n&lt;a href=\"https://cran.r-project.org/\"&gt;\n  Link a CRAN con a href\n&lt;/a&gt;\nOutput:\n\nSi queremos insertar código y gráficas de R simplemente tenemos que insertar un nuevo code chunk y escribir nuestras instrucciones:\n---\n\n# Diapositiva con código y gráficas de R\n\n\\```{r, out.width = \"300px\"}\nlibrary(ggplot2)\n\nggplot(mpg) +\n    aes(cty, hwy) +\n    geom_point() +\n    ggtitle(\"Fuel efficiency!\")\n\\```\n\n\n\n\n\n\nNota\n\n\n\nEn el bloque de código anterior, hemos utilizado un método especial para “escapar” el bloque de código interno de RMarkdown. Esto significa que hemos añadido barras invertidas (“\\”) antes de las comillas invertidas que normalmente delimitan un bloque de código. Hacemos esto para que el bloque interno se muestre como un ejemplo de código en el documento, pero sin que se ejecute realmente como código R.\n\n\nOutput:\n\nTambién podemos insertar imágenes (incluso pueden ser gifs) de dos maneras, estilo RMarkdown o estilo HTML:\n---\n\n# Diapositiva con imágenes\n\n- Estilo Rmarkdown:\n![Este es Tobías](Imagenes/tobi.png)\n\n---\n\n- Estilo HTML:\n\n&lt;div align=\"center\"&gt;\n&lt;img src=\"Imagenes/tobi.png\" width=\"650\" height=\"500\"&gt;\n&lt;br&gt;\n&lt;br&gt;\nEste es Tobías\n&lt;/div&gt;\nOutput:\n\n    \n    \n\n\n\n\n\n\n\nNota\n\n\n\nPreferiblemente hay que usar el estilo HTML debido a que no podemos cambiar el tamaño de la imagen de otro modo.\n\n\nLa imagen que inserté anteriormente estaba guardada en la memoria de mi computadora. Sin embargo, también podemos introducir imágenes que se encuentren en internet:\n---\n\n# Imagen desde internet\n\n&lt;br&gt;\n&lt;div align=\"center\"&gt;\n&lt;img src=\"https://media.giphy.com/media/Ihf1VjXyflOU6Mhh3l/giphy-downsized-large.gif\" width=\"700\" height=\"400\"&gt;\n&lt;br&gt;\n&lt;br&gt;\nFractal de Mandelbrot\n&lt;/div&gt;\nOutput:\n\nTambién podemos dividir cada diapositiva en dos partes e insertar ecuaciones LaTeX de la siguiente manera:\n---\n\n# Dividir la diapositiva en dos y agregar fórmulas en LaTeX\n\n.pull-left[\n&lt;br&gt;&lt;br&gt;\n&lt;div align=\"center\"&gt;\n&lt;img src=\"https://media.giphy.com/media/PkKzNQjwPy7GvxZbfe/giphy.gif\" width=\"300\" height=\"300\"&gt;\n&lt;br&gt;&lt;br&gt;\nAgujero negro\n&lt;/div&gt;\n\n]\n\n.pull-right[\n&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\nFórmula para hallar la temperatura de un agujero negro:\n\n$$T = \\frac{\\hbar c^3}{8\\pi kGM}$$\nOutput:\n\n¡Fin!\n\n\n\n\n\n\n\nNotas adicionales\n\n\n\nSi quieres subir tu presentación a internet, te recomiendo seguir este otro tutorial: https://silviacanelon.com/blog/2021-03-16-deploying-xaringan-slides/.\nEl link de la presentación que cree en el presente tutorial es el siguiente: https://alejandroromerog.github.io/PracticaUnoXaringan/#1."
  },
  {
    "objectID": "publications/tercera-edad-a-la-deriva/index.html",
    "href": "publications/tercera-edad-a-la-deriva/index.html",
    "title": "La tercera edad frente a los servicios financieros digitales ¿A la deriva?",
    "section": "",
    "text": "Arena Pública\n\nResumen\nLa digitalización de los servicios financieros es un proceso irreversible, pero está generando una brecha en varios segmentos. Un grupo particularmente vulnerable son las personas de la tercera edad. Los adultos mayores son una porción cada vez mayor de la población y de los usuarios del sistema. Es importante prevenir el llamado “edadismo” en los servicios financieros. Lo ocurrido en España recientemente saca a la luz el problema. En esta nota, la cual la elaboré con mi estudiante Alejandro Romero, buscamos reflexionar sobre el tema.\n\n\nNota completa\n¿Quién no ha tenido problemas con su App bancaria o con el portal de internet del banco? ¿Ha sido fácil solucionar ese problema? Ahora pensemos lo que esto representa para personas que tienen alguna limitación de movilidad, auditiva o visual, así como personas de la tercera edad, más allá de las aptitudes que cada uno tenga con los servicios digitales y de la accesibilidad real que tengan a la tecnología.\nLa digitalización de los servicios financieros es un proceso irreversible. Cada día, la economía digital da pasos más grandes. Por otra parte, la tendencia poblacional en México y toda América Latina es que los adultos mayores tengan una participación creciente en el total, el envejecimiento de la población es inminente. Al conjugar estos fenómenos hay que preguntarse si la digitalización de los servicios financieros está facilitando las vidas financieras de un creciente número de personas mayores.\nHay quien podría argumentar que el buen uso de los servicios financieros digitales depende de “habilidades digitales” de cada persona. Dudo que sea una explicación suficiente (empezando porque personas digitalmente sofisticadas sufren por igual los problemas). Aunque lo fuera, las condiciones que enfrentan los adultos mayores como limitaciones visuales, auditivas, de movilidad o cognitivas constituyen una barrera para el uso de la tecnología, al menos tal como está diseñada actualmente. Paradójicamente nos referimos aquí a un grupo de la población, que además de estar creciendo, tiene mucha dependencia de los servicios financieros y cada día estará más presente en las instituciones financieras.\nLas instituciones financieras son custodios del dinero de las personas. Para un usuario, alguien tiene que responder por esos recursos a nombre de una organización que se presenta como abstracta y burocrática (y definitivamente en una relación asimétrica). La tecnología digital, como me lo han dicho algunos financieros, facilita las operaciones, pero también aleja, crea una mayor distancia entre la institución y el cliente. La tecnología es una herramienta que puede mejorar la seguridad de las operaciones y la confianza de los usuarios en el sistema financiero. En el caso de los usuarios de tercera edad esto requiere que los productos y el servicio estén mejor diseñados para realmente responder a las necesidades de esas personas. Lo ocurrido en España recientemente pone en relieve esta situación.\nA principios de 2022, un médico retirado, Carlos San Juan de Laorden, puso bajo el ojo público un problema por el que están pasando las personas adultas mayores en España: una barrera en el acceso y uso de los servicios financieros, debido a la digitalización de éstos. San Juan de Laorden comenzó la petición “Soy mayor, no idiota”, en la plataforma Change.org. En ésta, demandaba principalmente la falta de trato humano, derivado del cierre de oficinas, falta de atención presencial y telefónica, e incluso trato indigno por parte del personal; reclamaba la marginalización y deshumanización de las personas adultas mayores por parte del sistema bancario. En otras palabras, los bancos caían en el llamado edadismo, esto es, una forma de discriminación por la edad. Hay una amplia literatura sobre el edadismo en distintas actividades de la sociedad.\nEn un par de meses, la petición de San Juan de Laorden acumuló más de medio millón de firmas, atrayendo la atención, primero de la prensa, luego del gobierno y de los bancos. El ministerio de Asuntos Económicos y Transformación Digital, junto con el Banco de España y la patronal bancaria buscaron una estrategia para disolver la brecha digital que excluye al sector de la tercera edad. Concluyeron tres medidas: En primer lugar, la creación del Protocolo de Actuación de las Entidades Financieras; en segundo lugar, establecimiento de un Observatorio de Inclusión Financiera y; en tercer lugar, la adopción por el Consejo de Ministros del Proyecto de Ley de Servicios de Atención al Cliente.\nEl Protocolo de Actuación de las Entidades Financieras incluye las siguientes medidas: prioridad a las personas de la tercera edad o con diversidad funcional cuando la concurrencia en las oficinas bancarias sea alta, atención personalizada desde las 09:00 a las 14:00 horas, formación específica de los empleados para una mejor atención de las personas adultas mayores, preferencia a las personas de 60 y más en la atención telefónica a través de un interlocutor personal, accesibilidad y sencillez de las interfaces de cajeros, páginas web y aplicaciones móviles, reparación de cajeros automáticos en un plazo no mayor a dos días laborales y, por último, ofrecimiento de educación digital, financiera y de prevención de estafas a dicho sector por medio de talleres o seminarios.\nComo fue mencionado con anterioridad, para poner en marcha de manera correcta estas políticas, las asociaciones bancarias realizarán un seguimiento semestral de la ejecución por medio del Observatorio de Inclusión Financiera, que posteriormente será evaluado anualmente por el Banco de España en un informe de seguimiento.\nEl Proyecto de Ley de Servicios de Atención al Cliente tiene como intención obligar a las firmas a ofrecer a sus consumidores atención eficaz, accesible, no discriminatoria, inclusiva, evaluable y personalizada. Parte de esto por medio de la prohibición de la derivación de las llamadas de los consumidores a un teléfono que implique costos adicionales hacia su persona y del aprovechamiento de una consulta o reclamación para ofrecer bienes o servicios.\nAdemás, las empresas tendrán que diseñar sus servicios de manera que los principios de accesibilidad universal, igualdad de trato y no discriminación sean respetados y se verán obligadas a ajustar el horario de servicio al horario comercial de la empresa; sin embargo, para aquellas empresas que presten servicios básicos de manera continua, estará disponible 24 horas al día, todos los días del año. Para que sus servicios puedan ser evaluables, éstas deberán realizar auditorías anuales para la comprobación de fiabilidad y precisión de la calidad de sus servicios. Si las empresas no llegaran a cumplir cualquiera de los puntos de arriba, serán acreedoras a multas.\nPara las principales asociaciones de personas adultas mayores en España, parecen sólo buenas intenciones y que estos cambios se quedan cortos a comparación del problema verdadero. Más si tomamos en cuenta que la tasa de utilización de los teléfonos inteligentes en España entre las personas de 50 a 60 años es de un 65% y desciende hasta el 22.95% en aquellas de más de 80 años y que el 20% de la población del país de la lengua castellana tiene más de 65 años. Para motivar a que los bancos realmente adopten las medidas, ya que su adopción está sujeta a la voluntad de esas empresas, se ha propuesto una certificación; de este modo, los usuarios tenderían a elegir los bancos que tengan la certificación y, después, todo quedará en manos de la ley de oferta y demanda.\nUna enseñanza de esta experiencia es la importancia de diseñar productos y formas de servicio más adecuadas. El peor escenario es que para resolver el problema se cree una nueva carga regulatoria para las instituciones financieras y quede resuelto a medias. También es importante tener protocolos para prevenir las actitudes de “edadismo” en el sistema. Por lo tanto, queda más del lado de las propias instituciones generar un servicio que fortalezca la confianza y el sentido de alianza con sus clientes, en particular lo más vulnerables y aquellos de la tercera edad, quienes en algún momento dejarán de ser los menos."
  },
  {
    "objectID": "publications/tesis-licenciatura/index.html",
    "href": "publications/tesis-licenciatura/index.html",
    "title": "No es sólo un número: La edad en el sistema financiero mexicano",
    "section": "",
    "text": "Descargar\n\nResumen\nEn el presente estudio investigamos la existencia de disparidades financieras entre personas adultas mayores (edad ≥ 60) y personas jóvenes (edad ≤ 59) dentro del mercado financiero mexicano. Utilizando Propensity Score Matchings para garantizar una comparación adecuada entre los grupos estudiados, y respaldando nuestros resultados con análisis de estadística descriptiva, diferencias porcentuales simples y modelos probit, confirmamos la realidad de dichas desigualdades. Nuestros hallazgos, basados en los datos de la Encuesta Nacional de Inclusión Financiera 2021, a su vez revelaron barreras específicas enfrentadas por los adultos mayores en México.\nPara añadir robustez a nuestro trabajo, extendimos la investigación a tres cohortes distintas en las que el grupo de personas de la tercera edad era segmentado (60-69, 70-79 y 80 en adelante) y el grupo más joven se mantenía en un rango constante. Observamos signos consistentes en los efectos que tiene la edad en algunas de las prácticas de ahorro y crédito a lo largo de la última etapa vital, pero magnitudes distintas, representando un paso más en el entendimiento de este grupo. A pesar de la inclusión del sexo como variable explicativa en nuestro análisis, no encontramos diferencias significativas en este aspecto. Por todo lo anterior, concluimos que el sistema financiero mexicano perpetúa una forma de edadismo que margina a las personas de edad avanzada, subrayando la urgente necesidad de implementar estrategias que fomenten una inclusión financiera más equitativa."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ARG",
    "section": "",
    "text": "¡Hola! Soy Alejandro Romero González, economista egresado del CIDE con una fuerte pasión por la automatización y la Inteligencia Artificial. Mi especialidad radica en el manejo de datos: desde su recolección a través de técnicas de webscraping y webcrawling, pasando por su limpieza, hasta su análisis por medio de estadística descriptiva, visualizaciones y modelos econométricos, de series de tiempo y de machine learning. Más allá de mi trabajo en Blutitude, donde me concentro en datos médicos, también me sumerjo en investigaciones sobre inclusión financiera, colaborando estrechamente con el Dr. Gustavo A. Del Ángel Mobarak.\nHe iniciado un blog aquí mismo, donde encontrarás tutoriales y consejos sobre programación, así como relatos de mis aventuras y descubrimientos en proyectos personales. Espero que estas publicaciones te inspiren y te sean de gran utilidad. ¡Mantente al tanto de las novedades y no dudes en contactarme si tienes preguntas o quieres conversar sobre estos temas!"
  },
  {
    "objectID": "blog/ENIF-ENAFIN/index.html",
    "href": "blog/ENIF-ENAFIN/index.html",
    "title": "Análisis de encuestas ENIF y ENAFIN",
    "section": "",
    "text": "Descarga de datos\nAntes de sumergirnos en el código, primero debemos obtener los datos. A continuación, te guiaré a través de los pasos para descargarlos del sitio oficial del Instituto Nacional de Estadística y Geografía (INEGI). Cabe destacar que, en este tutorial, utilizaremos solamente las versiones de 2021 de ambas encuestas; sin embargo, el procedimiento es casi el mismo para cualquier edición de las mismas.\nEn primer lugar, debemos ir al sitio web del INEGI y buscar las encuestas ENIF y ENAFIN. Para ello, podemos utilizar el buscador que aparece en la página principal o simplemente hacer clic en los siguientes enlaces:\n\nEncuesta Nacional de Inclusión Financiera\nEncuesta Nacional de Financiamiento de las Empresas\n\nUna vez que hayamos ingresado a la sección de Datos abiertos de cada encuesta, debemos cliquear estos botones que resalté con rectángulos rojos para iniciar las respectivas descargas:\n\n    \n    \n\n\nYa completadas las descargas, encontraremos los archivos de ambas encuestas en nuestra computadora. Dichos archivos deben de verse así:\n\nLos dos archivos vienen en formato comprimido (.zip). Para poder utilizar los datos, necesitamos descomprimirlos primero. Para ello, en Windows, podemos hacer clic derecho sobre cada archivo y seleccionar la opción Extraer aquí; en macOS solo basta con dar doble clic en cada uno de ellos. Al haber hecho esto, veremos que se crearán dos carpetas nuevas, una para cada encuesta, que contienen los archivos de datos, los diccionarios de variables y los modelos entidad-relación de las mismas:\n\n    \n\n    \n        \n        \n    \n\n\nCon los datos descomprimidos listos, el siguiente paso es cargarlos en R y empezar a trabajar con ellos.\n\n\nProcesamiento de datos\nPara empezar con el código, debemos de crear un nuevo archivo de R Markdown. Para ello, en RStudio, vamos a File &gt; New File &gt; R Markdown… y seleccionamos la opción Create Empty Document. Es una buena práctica guardar el archivo en la misma carpeta donde tenemos los datos de ambas encuestas, por lo que…"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publicaciones",
    "section": "",
    "text": "No es sólo un número: La edad en el sistema financiero mexicano\n\n\nTesis de Licenciatura en Economía, CIDE\n\n\n\n\n\n\n5 oct 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLa tercera edad frente a los servicios financieros digitales ¿A la deriva?\n\n\nNota de opinión como coautor del Dr. Gustavo A. Del Ángel Mobarak publicada en Arena Pública\n\n\n\n\n\n\n11 jul 2022\n\n\n\n\n\n\n\n\nNo hay resultados"
  }
]